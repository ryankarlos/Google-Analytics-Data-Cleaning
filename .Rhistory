q()
install.packages('rmarkdown')
install.packages("rshiny")
library(caret)
library(ggplot2)
library(dplyr, warn.conflicts = FALSE)
library(tidyr)
library(caret)
library(randomForest)
library(xgboost)
install.packages('qdap')
install.packages('xlsx')
install.packages("qdap")
install.packages("xlsx")
install.packages(qdap)
install.packages('qdap')
install.packages('word')
install.packages("SnowballC")
## Loading Libraries
rm(list=ls())
library(dplyr)
library(ggplot2)
library(tidyr)
library(reshape2)
library(wordcloud)
library(RWeka)
library(tm)
require(openNLP) #similar to RWeka, for NLP processing
library(stringr)
library(text2vec)
library(LDAvis)
## Importing the twitter snakebite csv file
snakebite<-read.csv('snakebite27102017.csv')
head(snakebite, 20)
stop_words <- c('i', 'me', 'my', 'myself', 'we', 'our', 'ours', 'ourselves', 'you', 'your', 'yours', 'yourself', 'could', 'take','yourselves', 'he', 'him', 'his', 'himself', 'she', 'her', 'hers', 'herself', 'it', 'its', 'itself','they', 'them', 'their', 'theirs', 'themselves', 'what', 'which', 'who', 'whom', 'this', 'that', 'these','those', 'am', 'is', 'are', 'was', 'were', 'be', 'been', 'being', 'have', 'has', 'had', 'having', 'do','does', 'did', 'doing', 'a', 'an', 'the', 'and', 'but', 'if', 'or', 'because', 'as', 'until', 'while','of', 'at', 'by', 'for', 'with', 'about', 'against', 'between', 'into', 'through', 'during', 'before', 'found','after', 'above', 'below', 'to', 'from', 'up', 'down', 'in', 'out', 'on', 'off', 'over', 'under', 'again',
'further', 'always', 'then', 'once', 'here', 'there', 'when', 'where', 'why', 'how', 'all', 'any', 'both', 'each','few', 'more', 'most', 'other', 'some', 'such', 'no', 'nor', 'not', 'only', 'own', 'same', 'so', 'than','too', 'very', 's', 't', 'can', 'will', 'just', 'don', 'should', 'now', 'd', 'll', 'm', 'o', 're', 've','y', 'ain', 'aren', 'couldn', 'didn', 'doesn', 'hadn', 'hasn', 'haven', 'isn', 'ma', 'mightn', 'mustn','needn', 'shan', 'shouldn', 'wasn', 'weren', 'won', 'wouldn', 'jus', 'could', 'always', 'take', 'get', 'via', 'find')
stop_words
tokens = reviews %>%
tolower %>%
word_tokenizer
stop_words <- c('i', 'me', 'my', 'myself', 'we', 'our', 'ours', 'ourselves', 'you', 'your', 'yours', 'yourself', 'could', 'take','yourselves', 'he', 'him', 'his', 'himself', 'she', 'her', 'hers', 'herself', 'it', 'its', 'itself','they', 'them', 'their', 'theirs', 'themselves', 'what', 'which', 'who', 'whom', 'this', 'that', 'these','those', 'am', 'is', 'are', 'was', 'were', 'be', 'been', 'being', 'have', 'has', 'had', 'having', 'do','does', 'did', 'doing', 'a', 'an', 'the', 'and', 'but', 'if', 'or', 'because', 'as', 'until', 'while','of', 'at', 'by', 'for', 'with', 'about', 'against', 'between', 'into', 'through', 'during', 'before', 'found','after', 'above', 'below', 'to', 'from', 'up', 'down', 'in', 'out', 'on', 'off', 'over', 'under', 'again',
'further', 'always', 'then', 'once', 'here', 'there', 'when', 'where', 'why', 'how', 'all', 'any', 'both', 'each','few', 'more', 'most', 'other', 'some', 'such', 'no', 'nor', 'not', 'only', 'own', 'same', 'so', 'than','too', 'very', 's', 't', 'can', 'will', 'just', 'don', 'should', 'now', 'd', 'll', 'm', 'o', 're', 've','y', 'ain', 'aren', 'couldn', 'didn', 'doesn', 'hadn', 'hasn', 'haven', 'isn', 'ma', 'mightn', 'mustn','needn', 'shan', 'shouldn', 'wasn', 'weren', 'won', 'wouldn', 'jus', 'could', 'always', 'take', 'get', 'via', 'find')
reviews <- gsub("'", "", snakebite$Text)  # remove apostrophes
reviews <- gsub("[[:punct:]]", " ", reviews)  # replace punctuation with space
reviews <- gsub("[[:cntrl:]]", " ", reviews)  # replace control characters with space
reviews <- gsub('http\\S+\\s*',"", reviews)
reviews <- gsub("^[[:space:]]+", "", reviews) # remove whitespace at beginning of documents
reviews <- gsub("[[:space:]]+$", "", reviews) # remove whitespace at end of documents
tokens = reviews %>%
tolower %>%
word_tokenizer
tokens
snakebite$cleaned
it = itoken(tokens, ids = snakebite$X, progressbar = FALSE)
v = create_vocabulary(it) %>%
prune_vocabulary(term_count_min = 6, doc_proportion_max = 0.2)
v
v <- v[-c(313,315), ]  ## removes weird charcters/words like <e3> in vocabulary list
vectorizer = vocab_vectorizer(v)a
vectorizer = vocab_vectorizer(v)
vectorizer()
vectorizer
dtm = create_dtm(it, vectorizer, type = "dgTMatrix")
dtm
tokens
myList <- myList[[-5]]
myList <- [-5]
snakebite$cleaned
tokens
removeWords(tokens), stop_words)
removeWords(tokens, stop_words)
test <- unlist(tokens)
test
removeWords(test, stop_words)
test1 <- removeWords(test, stop_words)
test1[test1 != ""]
test1 <- removeWords(test, stop_words)
test1[test1 != ""]
test1 <- removeWords(unlist(tokens), stop_words)
test1[test1 != ""]
stop_words <- c('i', 'me', 'my', 'myself', 'we', 'our', 'ours', 'ourselves', 'you', 'your', 'yours', 'yourself', 'could', 'take','yourselves', 'he', 'him', 'his', 'himself', 'she', 'her', 'hers', 'herself', 'it', 'its', 'itself','they', 'them', 'their', 'theirs', 'themselves', 'what', 'which', 'who', 'whom', 'this', 'that', 'these','those', 'am', 'is', 'are', 'was', 'were', 'be', 'been', 'being', 'have', 'has', 'had', 'having', 'do','does', 'did', 'doing', 'a', 'an', 'the', 'and', 'but', 'if', 'or', 'because', 'as', 'until', 'while','of', 'at', 'by', 'for', 'with', 'about', 'against', 'between', 'into', 'through', 'during', 'before', 'found','after', 'above', 'below', 'to', 'from', 'up', 'down', 'in', 'out', 'on', 'off', 'over', 'under', 'again', 'co', 't','further', 'always', 'then', 'once', 'here', 'there', 'when', 'where', 'why', 'how', 'all', 'any', 'both', 'each','few', 'more', 'most', 'other', 'some', 'such', 'no', 'nor', 'not', 'only', 'own', 'same', 'so', 'than','too', 'very', 's', 't', 'can', 'will', 'just', 'don', 'should', 'now', 'd', 'll', 'm', 'o', 're', 've','y', 'ain', 'aren', 'couldn', 'didn', 'doesn', 'hadn', 'hasn', 'haven', 'isn', 'ma', 'mightn', 'mustn','needn', 'shan', 'shouldn', 'wasn', 'weren', 'won', 'wouldn', 'jus', 'could', 'always', 'take', 'get', 'via', 'find')
test1 <- removeWords(unlist(tokens), stop_words)
test1[test1 != ""]
stop_words <- c('i', 'me', 'my', 'myself', 'we', 'our', 'ours', 'ourselves', 'you', 'your', 'yours', 'yourself', 'could', 'take','yourselves', 'he', 'him', 'his', 'himself', 'she', 'her', 'hers', 'herself', 'it', 'its', 'itself','they', 'them', 'their', 'theirs', 'themselves', 'what', 'which', 'who', 'whom', 'this', 'that', 'these','those', 'am', 'is', 'are', 'was', 'were', 'be', 'been', 'being', 'have', 'has', 'had', 'having', 'do','does', 'did', 'doing', 'a', 'an', 'the', 'and', 'but', 'if', 'or', 'because', 'as', 'until', 'while','of', 'at', 'by', 'for', 'with', 'about', 'against', 'between', 'into', 'through', 'during', 'before', 'found','after', 'above', 'below', 'to', 'from', 'up', 'down', 'in', 'out', 'on', 'off', 'over', 'under', 'again', 'co', 't','further', 'always', 'then', 'once', 'here', 'there', 'when', 'where', 'why', 'how', 'all', 'any', 'both', 'each','few', 'more', 'most', 'other', 'some', 'such', 'no', 'nor', 'not', 'only', 'own', 'same', 'so', 'than','too', 'very', 's', 't', 'can', 'will', 'just', 'don', 'should', 'now', 'd', 'll', 'm', 'o', 're', 've','y', 'ain', 'aren', 'couldn', 'didn', 'doesn', 'hadn', 'hasn', 'haven', 'isn', 'ma', 'mightn', 'mustn','needn', 'shan', 'shouldn', 'wasn', 'weren', 'won', 'wouldn', 'jus', 'could', 'always', 'take', 'get', 'via', 'find','Ã¢')
test1 <- removeWords(unlist(tokens), stop_words)
test1[test1 != ""]
test1 <-list(test1)
tokens[tokens!= ""]
rm(list=ls())
rm(list=ls())
library(dplyr)
library(ggplot2)
library(tidyr)
library(data.table)
library(stringr)
library(plyr)
rm(list = ls()) # clearing workspace
df = read.table('u_ex170101.log', fill = TRUE)
df <- subset(df, select = c(V1, V2, V5))
colnames(df) <- c("Date", "Time", "Request")
head(df, 5)
pdf <- df[grep(".*?pdf$", df$Request),]
#head(sort(table(pdf$Request),decreasing=T),5)
#head(count(pdf, Request))
## list all log files from current directory
file.list <- list.files(pattern = ".log$")
#df.list <- lapply(file.list, read.table)
df.list = read.table(file.list[2], fill = TRUE)
df.list <- subset(df.list, select = c(V1, V2, V5))
colnames(df.list) <- c("Date", "Time", "Request")
head(df.list, 5)
pdf.list <- df.list[grep(".*?pdf$", df.list$Request),]
reqs <- as.data.frame(sort(table(pdf$Request), decreasing = T))
colnames(reqs) <- c("Requests", "Frequency")
setwd("C:/Users/ryank/Documents/City_University/MantaRayMedia/Google Analytics logs/logs")
library(dplyr)
library(ggplot2)
library(tidyr)
library(data.table)
library(stringr)
library(plyr)
rm(list = ls()) # clearing workspace
df = read.table('u_ex170101.log', fill = TRUE)
df <- subset(df, select = c(V1, V2, V5))
colnames(df) <- c("Date", "Time", "Request")
head(df, 5)
pdf <- df[grep(".*?pdf$", df$Request),]
#head(sort(table(pdf$Request),decreasing=T),5)
#head(count(pdf, Request))
## list all log files from current directory
file.list <- list.files(pattern = ".log$")
#df.list <- lapply(file.list, read.table)
df.list = read.table(file.list[2], fill = TRUE)
df.list <- subset(df.list, select = c(V1, V2, V5))
colnames(df.list) <- c("Date", "Time", "Request")
head(df.list, 5)
pdf.list <- df.list[grep(".*?pdf$", df.list$Request),]
reqs <- as.data.frame(sort(table(pdf$Request), decreasing = T))
colnames(reqs) <- c("Requests", "Frequency")
head(reqs,10)
reqs[1:10]
reqs[1:10,]
ggplot(data= reqs[1:10,], aes(x=Requests, y= Frequency))
+ geom_bar() + xlab('Download')
+ ylab('Count') + opts(title='Most downloaded items')
library(ggplot2)
install.packages(ggplot2)
install.packages("ggplot2")
library(ggplot2)
install.packages("Rcpp")
library(ggplot2)
ggplot(data= reqs[1:10,], aes(x=Requests, y= Frequency))
+ geom_bar() + xlab('Download') + ylab('Count') + opts(title='Most downloaded items')
ggplot(data= reqs[1:10,], aes(x=Requests, y= Frequency)) + geom_bar() + xlab('Download') + ylab('Count') + opts(title='Most downloaded items')
ggplot(data= reqs[1:10,], aes(x=Requests, y= Frequency)) + geom_bar() + xlab('Download') + ylab('Count')
ggplot(data= reqs[1:10,], aes(x=Requests)) + geom_bar() + xlab('Download') + ylab('Count')
ggplot(data= reqs[1:10,], aes(x=Requests, y = Frequency)) + geom_bar(stat="identity") + xlab('Download') + ylab('Count')
ggplot(data= reqs[1:10,], aes(x=Requests, y = Frequency)) + geom_bar(stat="identity") + xlab('PDF Downloaded') + ylab('Number of requests')
ggplot(data= reqs[1:10,], aes(x=Requests, y = Frequency)) + geom_bar(stat="identity") + xlab('PDF Downloaded') + ylab('Number of requests') + coord_flip()
ggplot(data= reqs[1:20,], aes(x=Requests, y = Frequency)) + geom_bar(stat="identity") + xlab('PDF Downloaded') + ylab('Number of requests') + coord_flip()
ggplot(data= reqs[1:10,], aes(x=Requests, y = Frequency)) + geom_bar(stat="identity") + xlab('PDF Downloaded') + ylab('Number of requests') + coord_flip()
reqs = data.frame(Requests = factor(), Frequency = integer())
reqs <- rbind(reqs, as.data.frame(sort(table(pdf$Request), decreasing = T)))
ggplot(data= reqs[1:10,], aes(x=Requests, y = Frequency)) + geom_bar(stat="identity") + xlab('PDF Downloaded') + ylab('Number of requests') + coord_flip()
colnames(reqs) <- c("Requests", "Frequency")
ggplot(data= reqs[1:10,], aes(x=Requests, y = Frequency)) + geom_bar(stat="identity") + xlab('PDF Downloaded') + ylab('Number of requests') + coord_flip()
library(dplyr)
library(ggplot2)
library(tidyr)
library(data.table)
library(stringr)
library(plyr)
rm(list = ls()) # clearing workspace
df = read.table('u_ex170101.log', fill = TRUE)
df <- subset(df, select = c(V1, V2, V5))
colnames(df) <- c("Date", "Time", "Request")
head(df, 5)
pdf <- df[grep(".*?pdf$", df$Request),]
#head(sort(table(pdf$Request),decreasing=T),5)
#head(count(pdf, Request))
## list all log files from current directory
file.list <- list.files(pattern = ".log$")
#df.list <- lapply(file.list, read.table)
reqs = data.frame(Requests = factor(), Frequency = integer())
for(k in 1:4){
df.list = read.table(file.list[k], fill = TRUE)
df.list <- subset(df.list, select = c(V1, V2, V5))
colnames(df.list) <- c("Date", "Time", "Request")
head(df.list, 5)
pdf.list <- df.list[grep(".*?pdf$", df.list$Request),]
}
for(k in 1:4){
df.list = read.table(file.list[k], fill = TRUE)
df.list <- subset(df.list, select = c(V1, V2, V5))
colnames(df.list) <- c("Date", "Time", "Request")
head(df.list, 5)
pdf.list <- df.list[grep(".*?pdf$", df.list$Request),]
reqs <- rbind(reqs, as.data.frame(sort(table(pdf$Request), decreasing = T)))
}
colnames(reqs) <- c("Requests", "Frequency")
ggplot(data= reqs[1:10,], aes(x=Requests, y = Frequency)) + geom_bar(stat="identity") + xlab('PDF Downloaded') + ylab('Number of requests') + coord_flip()
ggplot(data= reqs[1:10,], aes(x=Requests, y = Frequency)) + geom_bar(stat="identity") + xlab('PDF Downloaded') + ylab('Number of requests') + coord_flip()
head(reqs,5)
library(dplyr)
library(ggplot2)
library(tidyr)
library(data.table)
library(stringr)
library(plyr)
rm(list = ls()) # clearing workspace
df = read.table('u_ex170101.log', fill = TRUE)
df <- subset(df, select = c(V1, V2, V5))
colnames(df) <- c("Date", "Time", "Request")
head(df, 5)
pdf <- df[grep(".*?pdf$", df$Request),]
#head(sort(table(pdf$Request),decreasing=T),5)
